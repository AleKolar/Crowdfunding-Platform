name: FastAPI CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ libpq-dev python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov coveralls pytest-html

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        SECRET_KEY: i5GSOGVbEN7l-UJRAoS2Uxjw0s8YU3oKdWMeQGCaw1M
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        pytest tests/ -v --html=report.html --self-contained-html --cov=src --cov-report=xml --cov-report=term-missing > test_output.txt || true
        
        echo "=========================================="
        echo "üìä CODE COVERAGE REPORT"
        echo "=========================================="
        coverage report --show-missing
        echo "=========================================="
          
        COVERAGE_PERCENT=$(python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage.xml')
        root = tree.getroot()
        coverage = float(root.get('line-rate')) * 100
        print(f'{coverage:.1f}%')
        ")
        echo "üéØ COVERAGE: $COVERAGE_PERCENT"
        
        # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
        TESTS_PASSED=$(grep -oP '\d+(?= passed)' test_output.txt | tail -1 || echo "0")
        TESTS_FAILED=$(grep -oP '\d+(?= failed)' test_output.txt | tail -1 || echo "0") 
        TESTS_SKIPPED=$(grep -oP '\d+(?= skipped)' test_output.txt | tail -1 || echo "0")
        TESTS_ERRORS=$(grep -oP '\d+(?= error)' test_output.txt | tail -1 || echo "0")
        
        echo "üìà TEST RESULTS:"
        echo "‚úÖ Passed: $TESTS_PASSED"
        echo "‚ùå Failed: $TESTS_FAILED"
        echo "‚è≠Ô∏è Skipped: $TESTS_SKIPPED"
        echo "üí• Errors: $TESTS_ERRORS"

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update README with test stats
      if: github.ref == 'refs/heads/main'
      run: |
        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è README
        python -c "
        import re
        
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π README
        with open('README.md', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ—Å—Ç–æ–≤
        new_content = re.sub(
            r'\*\*Total Tests\*\* \| \d+ \|',
            f'**Total Tests** | $((TESTS_PASSED + TESTS_FAILED + TESTS_SKIPPED + TESTS_ERRORS)) |',
            content
        )
        
        new_content = re.sub(
            r'\*\*Tests Passed\*\* \| .* \|',
            f'**Tests Passed** | {TESTS_PASSED} ‚úÖ |',
            new_content
        )
        
        new_content = re.sub(
            r'\*\*Tests Skipped\*\* \| .* \|',
            f'**Tests Skipped** | {TESTS_SKIPPED} ‚è≠Ô∏è |',
            new_content
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π README
        with open('README.md', 'w', encoding='utf-8') as f:
            f.write(new_content)
        "
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "üìä Update test statistics: $TESTS_PASSED passed, $TESTS_FAILED failed, $TESTS_SKIPPED skipped [skip ci]" || exit 0
        git push

    - name: Upload test report
      uses: actions/upload-artifact@v3
      with:
        name: pytest-report
        path: report.html