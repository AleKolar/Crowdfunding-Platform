name: FastAPI CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4  # ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ libpq-dev python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov coveralls pytest-html

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        SECRET_KEY: i5GSOGVbEN7l-UJRAoS2Uxjw0s8YU3oKdWMeQGCaw1M
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        pytest tests/ -v --html=report.html --self-contained-html --cov=src --cov-report=xml --cov-report=term-missing
        
        echo "=========================================="
        echo "üìä CODE COVERAGE REPORT"
        echo "=========================================="
        coverage report --show-missing
        echo "=========================================="
          
        COVERAGE_PERCENT=$(python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage.xml')
        root = tree.getroot()
        coverage = float(root.get('line-rate')) * 100
        print(f'{coverage:.1f}%')
        ")
        echo "üéØ COVERAGE: $COVERAGE_PERCENT"

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: report.html
        retention-days: 30

    - name: Update README with test stats
      if: github.ref == 'refs/heads/main'
      run: |
          # Inline Python —Å–∫—Ä–∏–ø—Ç
          python3 << 'EOF'
          import re
          import subprocess
          
          print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
          result = subprocess.run(
              ['pytest', 'tests/', '-v', '--tb=short'], 
              capture_output=True, 
              text=True
          )
          
          output = result.stdout
          
          # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          passed = re.search(r'(\d+) passed', output)
          failed = re.search(r'(\d+) failed', output)
          skipped = re.search(r'(\d+) skipped', output)
          
          if passed and failed and skipped:
              total = int(passed.group(1)) + int(failed.group(1)) + int(skipped.group(1))
              passed_count = int(passed.group(1))
              skipped_count = int(skipped.group(1))
          else:
              total = 0
              passed_count = 0
              skipped_count = 0
          
          print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {passed_count} passed, {failed.group(1) if failed else 0} failed, {skipped_count} skipped")
          
          # –û–±–Ω–æ–≤–ª—è–µ–º README
          with open('README.md', 'r') as f:
              content = f.read()
          
          content = re.sub(
              r'\*\*Total Tests\*\* \| .* \|',
              f'**Total Tests** | {total} |',
              content
          )
          
          content = re.sub(
              r'\*\*Tests Passed\*\* \| .* \|',
              f'**Tests Passed** | {passed_count} ‚úÖ |',
              content
          )
          
          content = re.sub(
              r'\*\*Tests Skipped\*\* \| .* \|',
              f'**Tests Skipped** | {skipped_count} ‚è≠Ô∏è |',
              content
          )
          
          with open('README.md', 'w') as f:
              f.write(content)
          
          print(f"‚úÖ README –æ–±–Ω–æ–≤–ª–µ–Ω: {passed_count}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
          EOF
          
          # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "üìä Update test statistics [skip ci]" || echo "No changes to commit"
          git push || echo "Nothing to push"