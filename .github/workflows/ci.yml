name: FastAPI CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4  # ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ libpq-dev python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov coveralls pytest-html

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        SECRET_KEY: i5GSOGVbEN7l-UJRAoS2Uxjw0s8YU3oKdWMeQGCaw1M
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        pytest tests/ -v --html=report.html --self-contained-html --cov=src --cov-report=xml --cov-report=term-missing
        
        echo "=========================================="
        echo "üìä CODE COVERAGE REPORT"
        echo "=========================================="
        coverage report --show-missing
        echo "=========================================="
          
        COVERAGE_PERCENT=$(python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage.xml')
        root = tree.getroot()
        coverage = float(root.get('line-rate')) * 100
        print(f'{coverage:.1f}%')
        ")
        echo "üéØ COVERAGE: $COVERAGE_PERCENT"

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: report.html
        retention-days: 30

    - name: Update README with test stats
      if: github.ref == 'refs/heads/main'
      run: |
        python .github/scripts/ci_update_readme.py
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "üìä Update test statistics [skip ci]" || echo "No changes to commit"
        git push