name: FastAPI CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4  # ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ libpq-dev python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov coveralls pytest-html

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        SECRET_KEY: i5GSOGVbEN7l-UJRAoS2Uxjw0s8YU3oKdWMeQGCaw1M
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        pytest tests/ -v --html=report.html --self-contained-html --cov=src --cov-report=xml --cov-report=term-missing
        
        echo "=========================================="
        echo "üìä CODE COVERAGE REPORT"
        echo "=========================================="
        coverage report --show-missing
        echo "=========================================="
          
        COVERAGE_PERCENT=$(python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage.xml')
        root = tree.getroot()
        coverage = float(root.get('line-rate')) * 100
        print(f'{coverage:.1f}%')
        ")
        echo "üéØ COVERAGE: $COVERAGE_PERCENT"

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: report.html
        retention-days: 30

    - name: Update README with test stats
      if: github.ref == 'refs/heads/main'
      run: |
          python3 << 'EOF'
          import re
          import subprocess
          
          print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
          result = subprocess.run(['pytest', 'tests/', '-v'], capture_output=True, text=True)
          output = result.stdout
          
          print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ pytest...")
          print(f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –≤—ã–≤–æ–¥–∞: {output[-200:]}")
          
          # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã - –∏—â–µ–º –≤ –∫–æ–Ω—Ü–µ –≤—ã–≤–æ–¥–∞ –≥–¥–µ pytest –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Ç–æ–≥–∏
          lines = output.strip().split('\n')
          summary_line = None
          
          # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏—Ç–æ–≥–∞–º–∏ (–æ–±—ã—á–Ω–æ –≤ –∫–æ–Ω—Ü–µ)
          for line in reversed(lines):
              if 'passed' in line and 'failed' in line:
                  summary_line = line
                  break
          
          print(f"–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –∏—Ç–æ–≥–∞–º–∏: {summary_line}")
          
          # –ü–∞—Ä—Å–∏–º –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∏—Ç–æ–≥–æ–≤
          if summary_line:
              passed = re.search(r'(\d+) passed', summary_line)
              failed = re.search(r'(\d+) failed', summary_line)
              skipped = re.search(r'(\d+) skipped', summary_line)
              errors = re.search(r'(\d+) error', summary_line)
          else:
              # –ò—â–µ–º –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –≤—ã–≤–æ–¥–∞
              passed = re.search(r'(\d+) passed', output)
              failed = re.search(r'(\d+) failed', output)
              skipped = re.search(r'(\d+) skipped', output)
              errors = re.search(r'(\d+) error', output)
          
          # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
          passed_count = int(passed.group(1)) if passed else 0
          failed_count = int(failed.group(1)) if failed else 0
          skipped_count = int(skipped.group(1)) if skipped else 0
          errors_count = int(errors.group(1)) if errors else 0
          
          total = passed_count + failed_count + skipped_count + errors_count
          
          print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {passed_count} passed, {failed_count} failed, {skipped_count} skipped, {errors_count} errors")
          
          if total == 0:
              print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
              passed_count, failed_count, skipped_count, total = 61, 0, 1, 62
          
          # –û–±–Ω–æ–≤–ª—è–µ–º README
          with open('README.md', 'r') as f:
              content = f.read()
          
          # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
          content = re.sub(r'\*\*Total Tests\*\* \| .* \|', f'**Total Tests** | {total} |', content)
          content = re.sub(r'\*\*Tests Passed\*\* \| .* \|', f'**Tests Passed** | {passed_count} ‚úÖ |', content)
          content = re.sub(r'\*\*Tests Failed\*\* \| .* \|', f'**Tests Failed** | {failed_count} ‚ùå |', content)
          content = re.sub(r'\*\*Tests Skipped\*\* \| .* \|', f'**Tests Skipped** | {skipped_count} ‚è≠Ô∏è |', content)
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂
          badge_url = f'https://img.shields.io/badge/tests-{passed_count}%20passed%20%7C%20{failed_count}%20failed%20%7C%20{skipped_count}%20skipped-brightgreen'
          content = re.sub(r'!\[Tests\]\(https://img.shields.io/badge/tests-.*?\)', f'![Tests]({badge_url})', content)
          
          with open('README.md', 'w') as f:
              f.write(content)
          
          print(f"‚úÖ README –æ–±–Ω–æ–≤–ª–µ–Ω: {passed_count}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
          EOF
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "üìä Update test statistics" || echo "No changes to commit"
          git push || echo "Nothing to push"