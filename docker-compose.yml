#version: '3.8'
#
#services:
#  postgres:
#    image: postgres:15
#    environment:
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  redis:
#    image: redis:7-alpine
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    command: redis-server --appendonly yes
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 10s
#      timeout: 3s
#      retries: 3
#
#  app:
#    build: .
#    ports:
#      - "8000:8000"
#    environment:
#      - DB_HOST=postgres
#      - REDIS_HOST=redis
#    depends_on:
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    volumes:
#      - .:/app
#
#  celery-worker:
#    build: .
#    command: celery -A src.tasks.celery_app worker --loglevel=info
#    environment:
#      - DB_HOST=postgres
#      - REDIS_HOST=redis
#      - CELERY_BROKER_URL=redis://redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis:6379/1
#    depends_on:
#      - postgres
#      - redis
#
#  celery-beat:
#    build: .
#    command: celery -A src.tasks.celery_app beat --loglevel=info
#    environment:
#      - DB_HOST=postgres
#      - REDIS_HOST=redis
#    depends_on:
#      - postgres
#      - redis
#
#volumes:
#  postgres_data:
#  redis_data:

# for dev
version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: crowdfunding_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # app сервис удаляем из docker-compose для разработки
  # Запускаем приложение локально

volumes:
  postgres_data:
  redis_data: